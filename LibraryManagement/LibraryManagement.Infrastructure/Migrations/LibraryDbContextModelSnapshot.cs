// <auto-generated />
using System;
using LibraryManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BorrowingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("BorrowingRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowDate = new DateTime(2024, 10, 17, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            DueDate = new DateTime(2024, 10, 31, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            BorrowDate = new DateTime(2024, 10, 22, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            DueDate = new DateTime(2024, 11, 5, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            BorrowDate = new DateTime(2024, 10, 7, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            DueDate = new DateTime(2024, 10, 21, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            ReturnDate = new DateTime(2024, 10, 12, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookId = 4,
                            BorrowDate = new DateTime(2024, 10, 12, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            DueDate = new DateTime(2024, 10, 26, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            ReturnDate = new DateTime(2024, 10, 17, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AvailableCopies")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Harper Lee",
                            AvailableCopies = 2,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            ISBN = "9780061120084",
                            Status = 1,
                            Title = "To Kill a Mockingbird",
                            TotalCopies = 3
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jane Austen",
                            AvailableCopies = 2,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            ISBN = "9780141439518",
                            Status = 2,
                            Title = "Pride and Prejudice",
                            TotalCopies = 2
                        },
                        new
                        {
                            Id = 3,
                            Author = "F. Scott Fitzgerald",
                            AvailableCopies = 4,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            ISBN = "9780743273565",
                            Status = 1,
                            Title = "The Great Gatsby",
                            TotalCopies = 4
                        },
                        new
                        {
                            Id = 4,
                            Author = "George Orwell",
                            AvailableCopies = 3,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            ISBN = "9780451524935",
                            Status = 1,
                            Title = "1984",
                            TotalCopies = 3
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.R.R. Tolkien",
                            AvailableCopies = 2,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            ISBN = "9780618640157",
                            Status = 1,
                            Title = "The Lord of the Rings",
                            TotalCopies = 2
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            Email = "john.doe@email.com",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            Email = "jane.smith@email.com",
                            Name = "Jane Smith"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            Email = "robert.johnson@email.com",
                            Name = "Robert Johnson"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            Email = "maria.garcia@email.com",
                            Name = "Maria Garcia"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 10, 27, 22, 9, 25, 214, DateTimeKind.Utc).AddTicks(7537),
                            CreatedBy = "System",
                            Email = "david.wilson@email.com",
                            Name = "David Wilson"
                        });
                });

            modelBuilder.Entity("BorrowingRecord", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.Book", "Book")
                        .WithMany("BorrowingHistory")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Domain.Entities.User", "User")
                        .WithMany("BorrowingHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.Navigation("BorrowingHistory");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("BorrowingHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
